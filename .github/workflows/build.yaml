name: Build and Release (Windows)

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  build-windows:
    name: Build Windows Installer
    runs-on: windows-latest

    steps:
      - name: Checkout Repository (Shallow Clone for Speed)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Faster checkout

      - name: Unzip ffmpeg and ffprobe
        run: |
          Expand-Archive -Path src-tauri/bin/ffmpeg.zip -DestinationPath src-tauri/bin/
          Expand-Archive -Path src-tauri/bin/ffprobe.zip -DestinationPath src-tauri/bin/

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install pnpm  # Install pnpm BEFORE caching dependencies
        run: npm install -g pnpm

      - name: Restore pnpm Cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-node-${{ steps.node.outputs.version }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install Dependencies
        run: pnpm install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
            ~/.rustup  # Added Rust toolchain cache
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ runner.os }}-

      - name: Build Windows Executables (msi & exe)
        run: pnpm tauri build --ci
        env:
          RUSTFLAGS: "-C target-cpu=native"  # Optimize for runner CPU
          CARGO_INCREMENTAL: "1"  # Enable incremental builds

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Eddit-Windows-MSI
          path: src-tauri/target/release/bundle/msi/*.msi

      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Eddit-Windows-EXE
          path: src-tauri/target/release/bundle/nsis/*.exe

  release:
    name: Create GitHub Release
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download MSI Artifact
        uses: actions/download-artifact@v4
        with:
          name: Eddit-Windows-MSI
          path: artifacts/msi

      - name: Download EXE Artifact
        uses: actions/download-artifact@v4
        with:
          name: Eddit-Windows-EXE
          path: artifacts/exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/msi/*.msi
            artifacts/exe/*.exe
          tag_name: v0.1.0
          name: Eddit v0.1.0
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
